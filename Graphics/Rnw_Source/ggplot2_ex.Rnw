\documentclass[oneside]{book}
\usepackage{parskip}
\usepackage{hyperref}


\begin{document}

\title{\Huge ggplot2 Exercises \\ \vspace{5mm} \normalsize Based on {\itshape R Graphics Cookbook} by Winston Chang}
\author{Colonel Smoothie}
\date{27.12.2013}
\maketitle

\chapter*{Introduction}

Just leaving some notes here. I've been having some trouble with the tidy so I'm explicitly setting the option here:

<<>>=
opts_chunk$set(tidy=FALSE, message=FALSE, warning=FALSE)
@

{\bfseries Things to do}

I don't want this to be too similar to Chang's book or else there's not really much point in making this document, other than having it in question format so you can use active recall to test yourself. For the most part, I'll be creating exercises using the {\texttt MASS} package in addition to what's already in the book, they will be tailored to match the chapters but will be slightly different so you'll have something new.

I've also added a Miscellanous chapter for features of ggplot2 that are not covered in the textbook as well as an Actuarial Graphics chapter that includes actuarial applications of ggplot2.

\tableofcontents

\chapter{R Basics}

There's not really much to add for this chapter. Move on to the next one.

\chapter{Quickly Exploring Data}

\newpage

\begin{enumerate}
  \item Produce the following plot with the {\texttt mtcars} dataset. It's built into R so you do not need to load any packages:
  
  <<fig=TRUE, echo=FALSE>>=
    plot(mtcars$wt, mtcars$mpg)
  @
  
  \newpage
  
  \item Produce the following plot with the {\texttt mtcars} dataset. It's built into R so you do not need to load any packages:
  
    <<fig=TRUE, echo=FALSE>>=
      plot(mtcars$mpg, mtcars$wt)
    @
  
  \newpage
  
  \item Load the {\texttt ggplot2} package and produce the following plot with the {\texttt mtcars} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      qplot(mtcars$wt, mtcars$mpg)
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} package and produce the following plot with the {\texttt mtcars dataset}:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      qplot(wt, mpg, data=mtcars)
    @
    
    <<eval=FALSE, echo=FALSE>>=
      #Alternative Solution
      library(ggplot2)
      ggplot(mtcars, aes(x=wt,y=mpg))+geom_point()
    @
  \newpage
  
  \item Load the {\texttt ggplot2} package and produce the following plot with the {\texttt mtcars} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      qplot(mtcars$mpg, mtcars$wt)
    @
    
  \newpage
  
  \item Produce the following plot with the {\texttt pressure} dataset. It's built into R so you do not need to load any packages:
  
    <<fig=TRUE, echo=FALSE>>=
      plot(pressure$temperature, pressure$pressure, type = "l")
    @
  
  \newpage
  
  \item Produce the following plot with the {\texttt pressure} dataset. It's built into R so you do not need to load any packages:
  
    <<fig=TRUE, echo=FALSE>>=
      plot(pressure$temperature, pressure$pressure, type = "l")
      points(pressure$temperature, pressure$pressure)
    @
  
  \newpage
  
  \item Produce the following plot with the {\texttt pressure} dataset. It's built into R so you do not need to load any packages. The height of the red line is one-half of the height of the black line at all points:
    
    <<fig=TRUE, echo=FALSE>>=
      plot(pressure$temperature, pressure$pressure, type = "l")
      points(pressure$temperature, pressure$pressure)
  
      lines(pressure$temperature, pressure$pressure/2, col="red")
      points(pressure$temperature, pressure$pressure/2, col="red")
    @
  
  \newpage
  
  \item Produce the following plot with the {\texttt pressure} dataset. It's built into R so you do not need to load any packages. The height of the blue line is one-half of the height of the black line at all points:
    
    <<fig=TRUE, echo=FALSE>>=
      plot(pressure$temperature, pressure$pressure, type = "l")
      points(pressure$temperature, pressure$pressure)
  
      lines(pressure$temperature, pressure$pressure/2, col="blue")
      points(pressure$temperature, pressure$pressure/2, col="blue")
    @
  
  \newpage
  
  \item Load the {\texttt ggplot2} package and produce the following plot with the {\texttt pressure} dataset. It's built into R so you do not need to load any packages:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      qplot(pressure$temperature, pressure$pressure, geom="line")
    @
  
  \newpage
  
  \item Load the {\texttt ggplot2} package and produce the following plot with the {\texttt pressure} dataset. It's built into R so you do not need to load any packages:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      qplot(temperature, pressure, data=pressure, geom="line")
    @
    
    <<eval=FALSE, echo=FALSE>>=
      #Alternative Solution
      library(ggplot2)
      ggplot(pressure, aes(x=temperature, y=pressure))+geom_line()
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} package and produce the following plot with the {\texttt pressure} dataset. It's built into R so you do not need to load any packages:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      qplot(temperature, pressure, data=pressure, geom=c("line", "point"))
    @
    
    <<eval=FALSE, echo=FALSE>>=
      library(ggplot2)
      ggplot(pressure, aes(x=temperature, y=pressure)) + geom_line() + geom_point()
    @
    
  \newpage
  
  \item Produce the following plot with the {\texttt BOD} dataset. It's built into R so you do not need to load any packages:
  
    <<fig=TRUE, echo=FALSE>>=
      barplot(BOD$demand, names.arg=BOD$Time)
    @
    
  \newpage
  
  \item Load the {\texttt MASS} package and produce the following plot with the {\texttt Animals} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      library(MASS)
      barplot(Animals$brain, names.arg=row.names(Animals), las=2)
    @
    
    <<eval=FALSE, echo=FALSE>>=
      # Alternative solution provided by smwentum
      library(MASS)
      barplot(Animals$brain,names.arg=as.character(rownames(Animals))
              ,las =2,cex.names = .7)
    @
    
  \newpage
    
  \item Load the {\texttt MASS} package and produce the following plot with the {\texttt Animals} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      library(MASS)
      barplot(Animals$body, names.arg=row.names(Animals), las=2)
    @
  \newpage
  
  \item Produce the following plot with the {\texttt mtcars} dataset. It's built into R so you do not need to load any packages:
  
    <<fig=TRUE, echo=FALSE>>=
      barplot(table(mtcars$cyl))
    @
    
  \newpage
  
  \item Load the {\texttt MASS} package and produce the following plot with the {\texttt Aids2} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      library(MASS)
      barplot(table(Aids2$state))
    @
  
  \newpage
  
  \item Load the {\texttt MASS} package and produce the following plot with the {\texttt Aids2} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      library(MASS)
      barplot(table(Aids2$T.categ))
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} package and produce the following plot with the {\texttt BOD} dataset. It's built into R so you do not need to load any packages:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      qplot(BOD$Time, BOD$demand, geom="bar", stat="identity")
    @
  
  \newpage
  
  \item Load the {\texttt ggplot2} package and produce the following plot with the {\texttt BOD} dataset. It's built into R so you do not need to load any packages:
  
    <<fig=TRUE, echo=FALSE>>=
    library(ggplot2)
    qplot(factor(BOD$Time), BOD$demand, geom="bar", stat="identity")
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} package and produce the following plot with the {\texttt mtcars} dataset. It's built into R so you do not need to load any packages:
  
    <<fig=TRUE, echo=FALSE, message=FALSE>>=
      library(ggplot2)
      qplot(mtcars$cyl)
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} package and produce the following plot with the {\texttt mtcars} dataset. It's built into R so you do not need to load any packages:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      qplot(factor(mtcars$cyl))
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} package and produce the following plot with the {\texttt BOD} dataset. It's built into R so you do not need to load any packages:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      qplot(Time, demand, data=BOD, geom="bar", stat="identity")
    @
    
    <<eval=FALSE, echo=FALSE>>=
      #Alternate Solution
      library(ggplot2)
      ggplot(BOD, aes(x=Time, y=demand)) + geom_bar(stat="identity")
    @
  
  \newpage
  
  \item Load the {\texttt ggplot2} package and produce the following plot with the {\texttt mtcars} dataset. It's built into R so you do not need to load any packages:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      qplot(factor(cyl), data=mtcars)
    @
    
    <<eval=FALSE, echo=FALSE>>=
      #Alternate Solution
      library(ggplot2)
      ggplot(mtcars, aes(x=factor(cyl))) + geom_bar()
    @
    
  \newpage
  
  \item Produce the following plot using the {\texttt mtcars} dataset. It's built into R so you do not need to load any packages:
  
    <<fig=TRUE, echo=FALSE>>=
      hist(mtcars$mpg)
    @
  
  \newpage
  
  \item Produce the following plot using the {\texttt mtcars} dataset. It's built into R so you do not need to load any packages. This time, use 10 bins in the plot:
  
    <<fig=TRUE, echo=FALSE>>=
      hist(mtcars$mpg, breaks=10)
    @
  
  \newpage
  
  \item Load the {\texttt ggplot2} package and produce the following plot with the {\texttt mtcars} dataset. It's built into R so you do not need to load any packages:
  
    <<fig=TRUE, echo=FALSE, message=FALSE>>=
      library(ggplot2)
      qplot(mtcars$mpg)
    @
  
  \newpage
  
  \item Load the {texttt ggplot2} package and produce the following plot with the {\texttt mtcars} dataset. It's built into R so you do not need to load any packages. Set the width of the bins to 4:
  
    <<fig=TRUE, echo=FALSE, message=FALSE>>=
      library(ggplot2)
      qplot(mpg, data=mtcars, binwidth=4)
    @
    
    <<eval=FALSE, echo=FALSE>>=
      #Alternate Solution
      library(ggplot2)
      ggplot(mtcars, aes(x=mpg)) + geom_histogram(binwidth=4)
    @
    
  \newpage
  
  \item Produce the follwing plot with the {\texttt ToothGrowth} dataset. It's built into R so you do not need to load any packages:
  
    <<fig=TRUE, echo=FALSE>>=
      plot(ToothGrowth$supp, ToothGrowth$len)
    @
    
    <<eval=FALSE, echo=FALSE>>=
      #Alternate Solution
      boxplot(len ~ supp, data = ToothGrowth)
    @
    
  \newpage
  
  \item Produce the following plot with the {\texttt ToothGrowth} dataset. It's built into R so you do not need to load any packages:
  
    <<fig=TRUE, echo=FALSE>>=
      boxplot(len ~ supp + dose, data = ToothGrowth)
    @
  
  \newpage
  
  \item Load the {\texttt ggplot2 package} and produce the following plot with the {\texttt ToothGrowth} dataset. It's built into R so you do not need to load any packages:
    
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      qplot(ToothGrowth$supp, ToothGrowth$len, geom="boxplot")
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2 package} and produce the following plot with the {\texttt ToothGrowth} dataset. It's built into R so you do not need to load any packages:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      qplot(supp, len, data=ToothGrowth, geom="boxplot")
    @
    
    <<eval=FALSE, echo=FALSE>>=
      #Alternative Solution
      library(ggplot2)
      ggplot(ToothGrowth, aes(x=supp, y=len)) + geom_boxplot()
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2 package} and produce the following plot with the {\texttt ToothGrowth} dataset. It's built into R so you do not need to load any packages:
  
    <<fig=TRUE, echo=FALSE, tidy=FALSE>>=
      library(ggplot2)
      qplot(interaction(ToothGrowth$supp, ToothGrowth$dose), ToothGrowth$len,
geom="boxplot")
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2 package} and produce the following plot with the {\texttt ToothGrowth} dataset. It's built into R so you do not need to load any packages:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      qplot(interaction(supp, dose), len, data=ToothGrowth, geom="boxplot")
    @
    
    <<eval=FALSE, echo=FALSE>>=
      #Alternative Solution
      library(ggplot2)
      ggplot(ToothGrowth, aes(x=interaction(supp, dose), y=len)) + geom_boxplot()
    @
    
  \newpage
  
  \item Plot the function $x^3-5x$ on the range $[-4,4]$:
    
    <<fig=TRUE,echo=FALSE>>=
      curve(x^3-5*x, from=-4, to=4)
    @
    
  \newpage
  
  \item Plot the curves $1/(1+\mathrm{e}^{-x+10})$ and $1-1/(1+\mathrm{e}^{-x+10})$ as shown below:
  
    <<fig=TRUE, echo=FALSE>>=
      myfun <- function(xvar) {
        1/(1 + exp(-xvar + 10))
        }
      curve(myfun(x), from=0, to=20)
      curve(1-myfun(x), add = TRUE, col = "red")
    @
    
  \newpage
  
  \item Run the following code below:
  
    <<>>=
      myfun <- function(xvar) {
        1/(1 + exp(-xvar + 10))
        }
    @
    
  This represents the function $f(x)=1/(1+\mathrm{e}^{-x+10})$. Load the {\texttt ggplot2} package and plot the function on the range $[0,10]$:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      qplot(c(0,20), fun=myfun, stat="function", geom="line")
    @
    
    <<eval=FALSE, echo=TRUE, tidy=FALSE>>=
      #Alternative solution
      library(ggplot2)
      ggplot(data.frame(x=c(0, 20)), aes(x=x)) +
        stat_function(fun=myfun, geom="line")
    @
    
  \newpage
  
%%%%% CHAPTER 2 ADDITIONAL PROBLEMS HERE %%%%%
  
  \item Produce the following graph using the {\texttt biopsy} dataset from the {\texttt MASS} package:
  
    <<fig=TRUE, echo=FALSE>>=
      library(MASS)
      barplot(table(biopsy$V1),xlab="V1",ylab="Count",col="lavender")
    @
    
  \newpage
  
  \item Produce the follwing graph using the {\texttt Boston} dataset from the {\texttt MASS} package:
  
    <<fig=TRUE, echo=FALSE>>=
      library(MASS)
      hist(Boston$age,breaks=8,col="orange")
    @
    
  \newpage
  
  \item Produce the following graph using the {\texttt coop} dataset from the {\texttt MASS} package:
  
    <<fig=TRUE, echo=FALSE>>=
      library(MASS)
      hist(coop$Conc,col="deepskyblue",
        main="Concentration of Analyte in g/kg")
    @
    
  \newpage
    
  \item Produce the following graph using the {\texttt cpus} dataset from the {\texttt MASS} package:
  
    <<fig=TRUE, echo=FALSE>>=
      library(MASS)

      plot(factor(cpus$cach), cpus$perf, las=2, 
        main="CPU Performance by Cache Size",
        xlab="Cache Size (kilobytes)", 
        ylab="Performance Relative to IBM 370/158-3")
    @
    
  \newpage
    
  \item Load the {\texttt MASS} package and produce the following plot with the {\texttt crabs} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      library(MASS)
      hist(crabs$RW,col="seagreen2", 
        main="Rear Width Measurement\n of Leptograpsus Crabs",
        prob=TRUE,
        xlab="RW",breaks=10)
    @
  
  \newpage
    
  \item Load the {\texttt ggplot2} and {\texttt MASS} packages and produce the following plot with the {\texttt crabs} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      library(MASS)
      ggplot(crabs,aes(x=RW)) + 
        geom_histogram(colour="black",fill="steelblue1")
    @
  
  \newpage
  
  \item Load the {\texttt ggplot2} and {\texttt Mass} packages and produce the following plot with the {\texttt forbes} dataset:
  
    <<fig=TRUE,echo=FALSE>>=
      library(ggplot2)
      library(MASS)
      plot(pres ~ bp,data=forbes, main = "Boiling Points in the Alps", 
        xlab="Boiling point", 
        ylab="Barometric Pressure")
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} package and produce the following plot with the {\texttt GAGurine} dataset:
  
  <<fig=TRUE, echo=FALSE>>=
    library(ggplot2)
    library(MASS)
    ggplot(GAGurine,aes(x=Age,y=GAG))+geom_point()
  @
  
  
    
\end{enumerate}


%%%%% BEGIN CHAPTER 3 HERE %%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\chapter{Bar Graphs}

\newpage

\begin{enumerate}

  \item Load the {\texttt ggplot2} package and produce the following plot with the BOD (automatically loaded with R) dataset:
    
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      ggplot(BOD, aes(x=Time, y=demand)) + geom_bar(stat="identity")
      @
      
  \newpage
  
  \item Load the {\texttt ggplot2} package and produce the following plot with the BOD (automatically loaded with R) dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity")
    @
    
  \newpage
    
  \item Load the {\texttt ggplot2} package and produce the following plot with the BOD (automatically loaded with R) dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      ggplot(BOD,aes(x=Time, y=demand)) + 
        geom_bar(stat="identity",fill="pink",colour="black")
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} package and produce the following plot with the BOD (automatically loaded with R) dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      ggplot(BOD,aes(x=Time, y=demand)) + 
        geom_bar(stat="identity",fill="lightblue",colour="red")
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} and {\texttt gcookbook} packages and produce the following plot with the {\texttt cabbage\_exp} dataset:
    
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      library(gcookbook)
      ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
        geom_bar(position="dodge")
    @
    
    <<eval=FALSE, echo=FALSE>>=
      # Alternative solutions
      ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
        geom_bar(width=0.9, position=position_dodge())
      ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
        geom_bar(position=position_dodge(0.9))
      ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
        geom_bar(width=0.9, position=position_dodge(width=0.9))
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} and {\texttt gcookbook} packages and produce the following plot with the {\texttt cabbage\_exp} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      library(gcookbook)
      ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar))+
        geom_bar(position="dodge", colour="black") +
        scale_fill_brewer(palette="Pastel1")
    @
    
  \newpage
  
  \item Load the {texttt ggplot2} and {\texttt gcookbook} packages and produce the following plot with the {\texttt cabbage\_exp} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      library(gcookbook)
      ce <- cabbage_exp
      ce[6,3:6] <- c(NA, NA, NA, NA)

      ggplot(ce, aes(x=Date, y=Weight, fill=Cultivar)) +
      geom_bar(stat="identity", position="dodge", colour="black",na.rm=TRUE) +
      scale_fill_brewer(palette="Pastel1")
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} package and produce the following plot with the {\texttt diamonds} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      ggplot(diamonds,aes(x=cut))+geom_bar()
    @
  
  \newpage
  
  \item Load the {\texttt ggplot2} package and produce the following plot with the {\texttt diamonds} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      ggplot(diamonds, aes(x=carat)) + geom_bar()
    @
    
    <<eval=FALSE, echo=FALSE>>=
      # Alternative Solution
      library(ggplot2)
      ggplot(diamonds, aes(x=carat)) + geom_histogram()
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} and {\texttt gcookbook} packages and produce the following plot with the {\texttt upc} dataset (Run the following code first):
  
    <<echo=TRUE, results=FALSE>>=
      library(gcookbook)
      upc <- subset(uspopchange, rank(Change)>40)
    @
    
    <<fig=TRUE, echo=FALSE>>=
      ggplot(upc, aes(x=Abb, y=Change, fill=Region)) + geom_bar(stat="identity")
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} and {\texttt gcookbook} packages and produce the following plot with the {\texttt upc} dataset (run the following code first and use fill colours \#669933 and \#FFCC66):
  
    <<echo=TRUE, results=FALSE>>=
      library(ggplot2)
      library(gcookbook)
      upc <- subset(uspopchange, rank(Change)>40)
    @
    
    <<fig=TRUE, echo=FALSE>>=
      ggplot(upc, aes(x=reorder(Abb, Change), y=Change, fill=Region)) +
        geom_bar(stat="identity", colour="black") +
        scale_fill_manual(values=c("#669933", "#FFCC66")) +
        xlab("State")
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} and {\texttt gcookbook} packages and produce the following plot with the {\texttt csub} dataset (run the following code first):
  
    <<echo=TRUE, results=FALSE>>=
      library(ggplot2)
      library(gcookbook)
      csub <- subset(climate, Source=="Berkeley" & Year >= 1900)
      csub$pos <- csub$Anomaly10y >= 0
    @
    
    <<fig=TRUE, echo=FALSE>>=
      ggplot(csub, aes(x=Year, y=Anomaly10y, fill=pos)) +
        geom_bar(stat="identity", position="identity")
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} and {\texttt gcookbook} packages and produce the following plot with the {\texttt csub} dataset (run the following code first and use fill colours \#CCEEFF and \#FFDDDD):
  
    <<echo=TRUE, results=FALSE>>=
      library(ggplot2)
      library(gcookbook) # For the data set
      csub <- subset(climate, Source=="Berkeley" & Year >= 1900)
      csub$pos <- csub$Anomaly10y >= 0
    @
    
    <<fig=TRUE, echo=FALSE>>=
      ggplot(csub, aes(x=Year, y=Anomaly10y, fill=pos)) +
      geom_bar(stat="identity", position="identity", 
               colour="black", size=0.25) +
      scale_fill_manual(values=c("#CCEEFF", 
                                 "#FFDDDD"), guide=FALSE)
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} and {\texttt gcookbook} packages and produce the following plot with the {\texttt pg\_mean} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      ggplot(pg_mean, aes(x=group, y=weight)) + 
        geom_bar(stat="identity")
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} and {\texttt gcookbook} packages and produce the following plot with the {\texttt pg\_mean} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      ggplot(pg_mean, aes(x=group, y=weight)) + 
        geom_bar(stat="identity", width = 0.5)
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} and {\texttt gcookbook} packages and produce the following plot with the {\texttt pg\_mean} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      ggplot(pg_mean, aes(x=group, y=weight)) + 
        geom_bar(stat="identity", width = 1)
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} and {\texttt gcookbook} packages and produce the following plot with the {\texttt cabbage\_exp} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
        geom_bar(stat="identity", width=0.5, position="dodge")
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} and {\texttt gcookbook} packages and produce the following plot with the {\texttt cabbage\_exp} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
        geom_bar(stat="identity", width=0.5, 
                 position=position_dodge(0.7))
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} and {\texttt gcookbook} packages and produce the following plot with the {\texttt cabbage\_exp} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
        geom_bar(stat="identity")
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} and {\texttt gcookbook} packages and produce the following plot with the {\texttt cabbage\_exp} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      library(gcookbook)
      
      ggplot(cabbage_exp,aes(x=Date, y=Weight, fill=Cultivar)) +
        geom_bar(stat="identity") + 
        guides(fill=guide_legend(reverse=TRUE))
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2, plyr} and {\texttt gcookbook} packages and produce the following plot with the {\texttt cabbage\_exp} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      library(plyr)
      library(gcookbook)

      ggplot(cabbage_exp, aes(x=Date, y=Weight, 
                        fill=Cultivar, order=desc(Cultivar))) +
      geom_bar(stat="identity")
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} and {\texttt gcookbook} packages and produce the following plot with the {\texttt cabbage\_exp} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      library(gcookbook)
      
      ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + 
        geom_bar(stat="identity", colour="black") +
        guides(fill=guide_legend(reverse=TRUE)) + 
        scale_fill_brewer(palette="Pastel1")
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2, gcookbook,} and {\texttt plyr} packages and produce the following plot with the {\texttt cabbage\_exp} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      library(gcookbook)
      library(plyr)

      ce <- ddply(cabbage_exp, "Date", transform,
            percent_weight = Weight / sum(Weight) * 100)

      ggplot(ce, aes(x=Date, y=percent_weight, fill=Cultivar)) +
        geom_bar(stat="identity")
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2, gcookbook,} and {\texttt plyr} packages and produce the following plot with the {\texttt cabbage\_exp} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      library(gcookbook)
      library(plyr)

      ce <- ddply(cabbage_exp, "Date", transform,
            percent_weight = Weight / sum(Weight) * 100)

      ggplot(ce, aes(x=Date, y=percent_weight, fill=Cultivar)) +
        geom_bar(stat="identity", colour="black") +
        guides(fill=guide_legend(reverse=TRUE)) +
        scale_fill_brewer(palette="Pastel1")
    @
    
  \newpage
    
  \item Load the {\texttt ggplot2} and {\texttt gcookbook} packages and produce the following plot with the {\texttt cabbage\_exp} dataset:
    
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      library(gcookbook)

      ggplot(cabbage_exp,aes(x=interaction(Date,Cultivar),
                             y=Weight)) + 
        geom_bar(stat="identity") +
        geom_text(aes(label=Weight), vjust=1.5, colour="white")

    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} and {\texttt gcookbook} packages and produce the following plot with the {\texttt cabbage\_exp} dataset:
    
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      library(gcookbook)

      ggplot(cabbage_exp, aes(x=interaction(Date, Cultivar), 
                              y=Weight)) +
        geom_bar(stat="identity") +
        geom_text(aes(label=Weight), vjust= -0.2)

    @
    
    <<eval=FALSE, echo=FALSE>>=
      # Alternative Solutions
      
      # Adjust y limits to be a little higher
      library(ggplot2)
      library(gcookbook)
      ggplot(cabbage_exp, aes(x=interaction(Date, Cultivar), 
                              y=Weight)) +
        geom_bar(stat="identity") +
        geom_text(aes(label=Weight), vjust=-0.2) +
        ylim(0, max(cabbage_exp$Weight) * 1.05)

      # Map y positions slightly above bar top - y range of 
      # plot will auto-adjust
      library(ggplot2)
      library(gcookbook)
      ggplot(cabbage_exp, aes(x=interaction(Date, Cultivar), 
                              y=Weight)) +
        geom_bar(stat="identity") +
        geom_text(aes(y=Weight+0.1, label=Weight))
      @
    
  \newpage
  
  \item Load the {\texttt ggplot2} and {\texttt gcookbook} packages and produce the following plot with the {\texttt cabbage\_exp} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      library(gcookbook)
      ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
        geom_bar(stat="identity", position="dodge") +
        geom_text(aes(label=Weight), vjust=1.5, colour="white",
            position=position_dodge(.9), size=3)
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2}, {\texttt gcookbook}, and {\texttt plyr} packages and produce the following plot with the {\texttt cabbage\_exp} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      library(gcookbook)
      library(plyr)
      ce <- arrange(cabbage_exp, Date, Cultivar)

      ce <- ddply(ce, "Date", transform, label_y=cumsum(Weight))

      ggplot(ce, aes(x=Date, y=Weight, fill=Cultivar)) +
        geom_bar(stat="identity") +
        geom_text(aes(y=label_y, label=Weight), 
                  vjust=1.5, colour="white")
    @
    
\newpage
  
\item Load the {\texttt ggplot2}, {\texttt gcookbook}, and {\texttt plyr} packages and produce the following plot with the {\texttt cabbage\_exp} dataset:

    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      library(gcookbook)
      library(plyr)

      ce <- arrange(cabbage_exp, Date, Cultivar)

      ce <- ddply(ce, "Date", transform, 
                  label_y=cumsum(Weight)-0.5*Weight)

      ggplot(ce, aes(x=Date, y=Weight, fill=Cultivar)) +
        geom_bar(stat="identity") +
        geom_text(aes(y=label_y, label=Weight), 
                  colour="white")
    @
    
\newpage
  
\item Load the {\texttt ggplot2}, {\texttt gcookbook}, and {\texttt plyr} packages and produce the following plot with the {\texttt cabbage\_exp} dataset:

    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      library(gcookbook)
      library(plyr)

      ce <- arrange(cabbage_exp, Date, Cultivar)

      ce <- ddply(ce, "Date", transform, 
                  label_y=cumsum(Weight)-0.5*Weight)

      ggplot(ce, aes(x=Date, y=Weight, fill=Cultivar)) +
        geom_bar(stat="identity", colour="black") +
        geom_text(aes(y=label_y,
          label=paste(format(Weight, nsmall=2), "kg")),
                  size=4) +
        guides(fill=guide_legend(reverse=TRUE)) +
        scale_fill_brewer(palette="Pastel1")
    @
    
\newpage

\item Load the {\texttt ggplot2} and {\texttt gcookbook} packages and produce the following plot with the {\texttt tophit} dataset (run the following code first):

    <<eval=TRUE, echo=TRUE>>=
      tophit <- tophitters2001[1:25,]
    @
    
    <<fig=TRUE, echo=FALSE>>=
      ggplot(tophit, aes(x=avg, y=name)) + geom_point()
    @
    
  \newpage
  
  \item Load the {\texttt ggplot2} and {\texttt gcookbook} packages and produce the following plot with the {\texttt tophit} dataset (run the following code first):
  
    <<eval=TRUE, echo=TRUE>>=
      tophit <- tophitters2001[1:25,]
    @
    
    <<fig=TRUE, echo=FALSE>>=
      ggplot(tophit, aes(x=avg, y=reorder(name, avg))) +
        geom_point(size=3) +
        # Use a larger dot
        theme_bw() +
        theme(panel.grid.major.x = element_blank(),
          panel.grid.minor.x = element_blank(),
          panel.grid.major.y = element_line(colour="grey60",
                                linetype="dashed"))
    @
    
  \newpage
  

%%%%% ADDITIONAL PROBLEMS HERE %%%%%

  \item Load the {\texttt ggplot2} and {\texttt gcookbook} packages and produce the following plot with the {\texttt cabbage\_exp} dataset:
  
    <<fig=TRUE, echo=FALSE>>=
      library(ggplot2)
      library(gcookbook)
      ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar))+
        geom_bar(position="dodge", colour="black") +
        scale_fill_brewer(palette="Pastel2")
    @
      
\end{enumerate}

%%%%% BEGIN MISCELLANEOUS CHAPTER HERE %%%%%

\chapter{Miscellaneous}

\newpage

\begin{enumerate}
  
\item Load the package {\texttt ggplot2} and produce the following 5 charts from the {\texttt bacteria} dataset from the {\texttt MASS} package using a single loop. Be sure to remove the ID variable from your dataset:

    <<fig=TRUE,echo=FALSE, warning=FALSE, message=FALSE>>=
      library(ggplot2)
      library(MASS)

      bacteria2 <- bacteria[which(names(bacteria) != "ID")]

      for(i in 1:length(bacteria2)){
        print(ggplot(bacteria2,aes_string(x=names(bacteria2[i]))) + 
                geom_histogram())
      }
    @
    
\newpage

\end{enumerate}


%%%%% BEGIN ACTUARIAL CHAPTER HERE %%%%%

\chapter{Actuarial Graphics}

\end{document}